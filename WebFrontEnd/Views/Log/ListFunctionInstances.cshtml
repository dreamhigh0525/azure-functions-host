@using WebFrontEnd.Controllers
@using Executor
@model LogIndexModel
@{
    ViewBag.Title = "Function Invocation Log";
}

<div class="page-header">
<div class="pull-right">
    @Html.ActionLink("[Log Summary]", "Summary")
    <a class="btn" href="@Url.Action("GetChargebackLog")"><i class="icon-cloud-download"></i> Download Chargeback Log</a>
</div>
<h1>Invocation Log <small>@Model.Description</small></h1>
</div>

@if(Model.Logs.Any()) {
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Status</th>
                <th>Status Detail</th>
                <th>Output</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var log in Model.Logs)
            {
                string labelClass = null;
                string descClass = null;
                string labelText = null;
                switch (log.GetStatus())
                {
                    case FunctionInstanceStatus.CompletedFailed:
                        labelClass = "label-important";
                        descClass = "text-error";
                        labelText = "Failed";
                        break;
                    case FunctionInstanceStatus.CompletedSuccess:
                        labelClass = "label-success";
                        descClass = "text-success";
                        labelText = "Success";
                        break;
                    case FunctionInstanceStatus.Running:
                        labelClass = "label-info";
                        descClass = "text-info";
                        labelText = "Running";
                        break;
                    case FunctionInstanceStatus.Queued:
                        labelText = "Queued";
                        labelClass = "label-inverse";
                        break;
                    case FunctionInstanceStatus.AwaitingPrereqs:
                        labelText = "Awaiting Prerequisites";
                        labelClass = "label-inverse";
                        break;
                    // don't colorize others.                 
                }
                <tr>
                    <td>@Html.FunctionInstanceLogLinkVerbose(log)</td>
                    <td>
                        @if(!String.IsNullOrEmpty(labelText)) {
                            <span class="label @labelClass">@labelText</span>
                        }
                    </td>
                    <td class="@descClass">
                        @log.GetRunStatusString()
                    </td>
                    <td>@Html.FunctionOutputLink(log)</td>
                </tr>
            }
        </tbody>
    </table>
} else {
    <p class="alert alert-info">The invocation log is empty</p>
}